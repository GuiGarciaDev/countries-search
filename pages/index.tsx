import { useState } from 'react'
import Head from "next/head";
import styles from "@/styles/Home.module.scss";
import CountryCard from "@/src/components/country-card/CountryCard";
import useFetch from "@/src/hooks/useFetch";
import SearchBarComponent from "@/src/components/search-bar/SearchBar";

import { BsMoon, BsSun } from 'react-icons/bs'

export default function Home() {

  interface ICountry {
    name: string,
    flag: string,
    population: number,
    region: string,
    capital: string

  }

  const { data, isFetching } = useFetch<Array<ICountry>>('http://localhost:3000/api/countries')
  const [theme, setTheme] = useState<boolean>(true); // light = true | dark = false

  function changeTheme(theme: boolean) :void {
    const html = document.querySelectorAll('html')[0]
    setTheme(prev => !prev)

    !theme
      ? html.classList.remove('dark-mode')
      : html.classList.add('dark-mode')  
  }

  return (
    <>
      <Head>
        <title>Countries</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.header}>
          <h1>Where in the world?</h1>
          <button className={styles.themeChanger} onClick={() => changeTheme(theme)}>
            { theme ? <><BsMoon /> Dark Mode</> : <><BsSun /> Light Mode</> }
          </button>
        </div>

        <div className={styles.bodyPage}>
          <div className={styles.searchFilter}>
            <SearchBarComponent />
            <form id='regions'>
              <select name="regions" id="regions">
                <option selected disabled hidden>Filter by region</option>
                <option value="Africa">Africa</option>
                <option value="America">America</option>
                <option value="Asia">Asia</option>
                <option value="Europe">Europe</option>
                <option value="Oceania">Oceania</option>
              </select>
            </form>
          </div>

          <div className={styles.countries}>
            { data?.map((country) => {
              return (
                <CountryCard country={country}/>
              )
            })}
          </div>
        </div>
      </main>
    </>
  );
}
